### Starting build.
# Target: main.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules main.mli > main.mli.depends # cached
# Target: main.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o main.cmi main.mli # cached
# Target: main.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules main.ml > main.ml.depends # cached
# Target: cards.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), extension:mli, file:cards.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules cards.mli > cards.mli.depends # cached
# Target: cpu.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), extension:mli, file:cpu.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules cpu.mli > cpu.mli.depends # cached
# Target: dice.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), extension:mli, file:dice.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules dice.mli > dice.mli.depends # cached
# Target: graph.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), extension:mli, file:graph.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules graph.mli > graph.mli.depends # cached
# Target: player.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), extension:mli, file:player.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules player.mli > player.mli.depends # cached
# Target: cards.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, extension:mli, file:cards.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o cards.cmi cards.mli
# Target: graph.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, extension:mli, file:graph.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o graph.cmi graph.mli
# Target: dice.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, extension:mli, file:dice.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o dice.cmi dice.mli
# Target: player.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, extension:mli, file:player.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o player.cmi player.mli
# Target: cpu.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, extension:mli, file:cpu.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o cpu.cmi cpu.mli # cached
# Target: printer.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), extension:mli, file:printer.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules printer.mli > printer.mli.depends # cached
# Target: user.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), extension:mli, file:user.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules user.mli > user.mli.depends # cached
# Target: printer.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, extension:mli, file:printer.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o printer.cmi printer.mli
# Target: user.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, extension:mli, file:user.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o user.cmi user.mli
# Target: main.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o main.cmo main.ml # cached
# Target: cards.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), coverage, extension:ml, file:cards.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules cards.ml > cards.ml.depends # cached
# Target: cpu.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), coverage, extension:ml, file:cpu.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules cpu.ml > cpu.ml.depends # cached
# Target: command.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules command.mli > command.mli.depends # cached
# Target: queue.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), extension:mli, file:queue.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules queue.mli > queue.mli.depends # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o command.cmi command.mli
# Target: queue.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, extension:mli, file:queue.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o queue.cmi queue.mli
# Target: cpu.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, coverage, extension:cmo, extension:ml, file:cpu.cmo, file:cpu.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o cpu.cmo cpu.ml # cached
# Target: graph.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), coverage, extension:ml, file:graph.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules graph.ml > graph.ml.depends # cached
# Target: player.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), coverage, extension:ml, file:player.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules player.ml > player.ml.depends # cached
# Target: printer.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), coverage, extension:ml, file:printer.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules printer.ml > printer.ml.depends # cached
# Target: user.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), coverage, extension:ml, file:user.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules user.ml > user.ml.depends # cached
# Target: cards.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, coverage, extension:cmo, extension:ml, file:cards.cmo, file:cards.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o cards.cmo cards.ml
# Target: graph.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, coverage, extension:cmo, extension:ml, file:graph.cmo, file:graph.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o graph.cmo graph.ml
# Target: player.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, coverage, extension:cmo, extension:ml, file:player.cmo, file:player.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o player.cmo player.ml
# Target: printer.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, coverage, extension:cmo, extension:ml, file:printer.cmo, file:printer.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o printer.cmo printer.ml
# Target: user.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, coverage, extension:cmo, extension:ml, file:user.cmo, file:user.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o user.cmo user.ml
# Target: command.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), coverage, extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules command.ml > command.ml.depends # cached
# Target: dice.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), coverage, extension:ml, file:dice.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules dice.ml > dice.ml.depends # cached
# Target: queue.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), coverage, extension:ml, file:queue.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -modules queue.ml > queue.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, coverage, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o command.cmo command.ml
# Target: dice.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, coverage, extension:cmo, extension:ml, file:dice.cmo, file:dice.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o dice.cmo dice.ml
# Target: queue.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, compile, coverage, extension:cmo, extension:ml, file:queue.cmo, file:queue.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str -o queue.cmo queue.ml
# Target: main.byte, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(qcheck), package(str), package(unix), package(yojson), byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -package unix -package qcheck -package str cards.cmo command.cmo dice.cmo printer.cmo graph.cmo player.cmo queue.cmo user.cmo cpu.cmo main.cmo -o main.byte
# Compilation successful.
